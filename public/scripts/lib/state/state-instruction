// ===== USAGE EXAMPLE =====
/*

// Listen to events
chatState.on('chat:added', (data) => {
    console.log('New chat:', data.chat.title);
});

// Create a chat
const newChat = chatState.createChat('My Chat');

// Add a message
chatState.addMessage(newChat.id, {
    sender: 'user',
    text: 'Hello!',
    timestamp: Date.now()
});

// Get current state
const activeChat = chatState.getActiveChat();
const allChats = chatState.getAllChats();

*/

// ===== IMPLEMENTATION CHECKLIST =====
/*

Phase 1 - Basic Structure:
□ Implement event system (on, off, emit)
□ Implement basic getters (getAllChats, getActiveChat, etc.)
□ Implement isEmpty()

Phase 2 - Chat Operations:
□ Implement createChat()
□ Implement deleteChat()
□ Implement setActiveChat()
□ Implement toggleChatPin()

Phase 3 - Message Operations:
□ Implement addMessage()
□ Implement pinMessage()
□ Implement unpinMessage()
□ Implement toggleMessagePin()

Phase 4 - Advanced Features:
□ Implement persistence (serialize/deserialize)
□ Implement localStorage methods
□ Implement validation helpers
□ Add error handling

Phase 5 - Testing:
□ Test all public methods
□ Test event emissions
□ Test edge cases
□ Add debug logging

*/